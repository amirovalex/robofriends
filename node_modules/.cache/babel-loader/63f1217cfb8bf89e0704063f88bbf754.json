{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/-STUDY-/WEBDEVELOPER COURSE/REACT/CREATING A REACT APP/robofriends/src/containers/App.js\";\nimport CardList from '../components/CardList';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [] // searchfield: '',\n\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  } // onSearchChange = (event) => {\n  // \tthis.setState({ searchfield: event.target.value})\n  // }\n\n\n  render() {\n    const robots = this.state.robots;\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (!robots.length) {\n      return React.createElement(\"h1\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Robofriends\"), React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ErrorBoundry, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/sasha/Desktop/-STUDY-/WEBDEVELOPER COURSE/REACT/CREATING A REACT APP/robofriends/src/containers/App.js"],"names":["CardList","React","Component","connect","Scroll","SearchBox","ErrorBoundry","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,EAA0BC,aAA1B,QAA+C,YAA/C;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAGD,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFtB;AAGNC,IAAAA,SAAS,EAAGJ,KAAK,CAACF,aAAN,CAAoBM,SAH1B;AAINC,IAAAA,KAAK,EAAGL,KAAK,CAACF,aAAN,CAAoBO;AAJtB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD7B;AAENC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACT,aAAa,EAAd;AAFzB,GAAP;AAIA,CALD;;AAOA,MAAMe,GAAN,SAAkBrB,SAAlB,CAA4B;AAC1BsB,EAAAA,WAAW,GAAG;AACd;AACA,SAAKd,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,EADG,CAEX;;AAFW,KAAb;AAIA;;AAEFY,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,eAAX;AACA,GAX2B,CAe3B;AACA;AACA;;;AAEAK,EAAAA,MAAM,GAAG;AAAA,UACDd,MADC,GACwB,KAAKH,KAD7B,CACDG,MADC;AAAA,wBAEgC,KAAKa,KAFrC;AAAA,UAEAf,WAFA,eAEAA,WAFA;AAAA,UAEaO,cAFb,eAEaA,cAFb;AAGR,UAAMU,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;;AAGA,QAAI,CAACnB,MAAM,CAACqB,MAAZ,EAAoB;AACnB,aAAO;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA,KAFD,MAEO;AACP,aACC;AAAK,QAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAY,QAAA,YAAY,EAAEhB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAGU,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CAHD,CADD;AAUI;AACJ;;AAvC0B;;AA0C5B,eAAezB,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import CardList from '../components/CardList';\nimport React , {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Scroll from '../components/Scroll'\nimport './App.css'\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { setSearchField , requestRobots } from '../actions';\n\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField : state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending : state.requestRobots.isPending,\n\t\terror : state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots())\n\t}\n}\n\nclass App extends Component {\n\t\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\trobots: [],\n\t\t\t\t// searchfield: '',\n\t\t}\n\t}\n\ncomponentDidMount() {\n\tthis.props.onRequestRobots();\n}\n \n\n\n\t// onSearchChange = (event) => {\n\t// \tthis.setState({ searchfield: event.target.value})\n\t// }\n\n\trender() {\n\t\tconst {robots/*searchfield*/} = this.state;\n\t\tconst { searchField, onSearchChange } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\t\tif (!robots.length) {\n\t\t\treturn <h1 className='tc'>Loading</h1>\n\t\t} else {\n\t\treturn (\n\t\t\t<div className= 'tc'>\n\t\t\t\t<h1 className='f1'>Robofriends</h1>\n\t\t\t\t<SearchBox  searchChange={onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots ={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}